[General]
network = InVehicleNetworkExample
#record-eventlog = true

*.streamReservationConfigurator.gateCycleDuration = 20ms
*.streamReservationConfigurator.configuration = \
   [{type: "unicast", priority: 0, source: "wheel*", destination: "hud", packetLength: 100B + 54B, packetInterval: 5ms, maxLatency: 100us}, \
    {type: "unicast", priority: 0, source: "steering", destination: "hud", packetLength: 100B + 54B, packetInterval: 5ms, maxLatency: 100us}, \
    {type: "unicast", priority: 1, source: "lidar", destination: "hud", packetLength: 1000B + 54B, packetInterval: 250us, maxLatency: 500us}, \
    {type: "unicast", priority: 2, source: "camera*", destination: "hud", packetLength: 1000B + 54B, packetInterval: 250us, maxLatency: 5ms}, \
    {type: "unicast", priority: 3, source: "obu", destination: "hud", packetLength: 1000B + 54B, packetInterval: 5ms, maxLatency: 5ms}]

# packet name
*.*.app[0].source.packetNameFormat = "%N-%c"

# steering
*.steering.numApps = 1
*.steering.app[0].typename = "UdpApp"
*.steering.app[0].source.packetLength = 100B # intuniform(14B, 144B)
*.steering.app[0].source.productionInterval = 5ms
*.steering.app[0].io.destPort = 1000
*.steering.app[0].io.destAddress = "hud"

# wheel
*.wheel*.numApps = 1
*.wheel*.app[0].typename = "UdpApp"
*.wheel*.app[0].source.packetLength = 100B # intuniform(14B, 144B)
*.wheel*.app[0].source.productionInterval = 5ms
*.wheel*.app[0].io.destAddress = "hud"
*.wheel1.app[0].io.destPort = 1001
*.wheel2.app[0].io.destPort = 1002
*.wheel3.app[0].io.destPort = 1003
*.wheel4.app[0].io.destPort = 1004

# lidar
*.lidar.numApps = 1
*.lidar.app[0].typename = "UdpApp"
*.lidar.app[0].source.packetLength = 1000B # intuniform(875B, 1400B)
*.lidar.app[0].source.productionInterval = 250us # uniform(200us, 1ms)
*.lidar.app[0].io.destPort = 1005
*.lidar.app[0].io.destAddress = "hud"

# camera
*.camera*.numApps = 1
*.camera*.app[0].typename = "UdpApp"
*.camera*.app[0].source.packetLength = 1000B # intuniform(875B, 1400B)
*.camera*.app[0].source.productionInterval = 250us # uniform(200us, 1ms)
*.camera*.app[0].io.destAddress = "hud"
*.camera1.app[0].io.destPort = 1006
*.camera2.app[0].io.destPort = 1007
*.camera3.app[0].io.destPort = 1008
*.camera4.app[0].io.destPort = 1009

# infotainment
*.obu.numApps = 1
*.obu.app[0].typename = "UdpApp"
*.obu.app[0].source.packetLength = 1000B # intuniform(875B, 1400B)
*.obu.app[0].source.productionInterval = 5ms # uniform(200us, 1ms)
*.obu.app[0].io.destPort = 1010
*.obu.app[0].io.destAddress = "hud"

# sink applications
*.hud.numApps = 11
*.hud.app[*].typename = "UdpSink"
*.hud.app[0].localPort = 1000
*.hud.app[1].localPort = 1001
*.hud.app[2].localPort = 1002
*.hud.app[3].localPort = 1003
*.hud.app[4].localPort = 1004
*.hud.app[5].localPort = 1005
*.hud.app[6].localPort = 1006
*.hud.app[7].localPort = 1007
*.hud.app[8].localPort = 1008
*.hud.app[9].localPort = 1009
*.hud.app[10].localPort = 1010

# avoid ARP
*.*.ipv4.arp.typename = "GlobalArp"
*.frontSwitch.macTable.addressTableFile = "frontSwitch.txt"
*.frontLeftSwitch.macTable.addressTableFile = "frontLeftSwitch.txt"
*.frontRightSwitch.macTable.addressTableFile = "frontRightSwitch.txt"
*.rearSwitch.macTable.addressTableFile = "rearSwitch.txt"
*.rearLeftSwitch.macTable.addressTableFile = "rearLeftSwitch.txt"
*.rearRightSwitch.macTable.addressTableFile = "rearRightSwitch.txt"

# disable legacy Ethernet
*.*.encap.typename = "OmittedEthernetEncapsulation"
*.*.ethernet.typename = "EthernetLayer"
*.*.eth[*].typename = "LayeredEthernetInterface"

# bitrates
*.frontSwitch.eth[0..2].bitrate = 1Gbps
*.rearSwitch.eth[0..1].bitrate = 1Gbps
*.hud.eth[0].bitrate = 1Gbps
*.*.eth[*].bitrate = 100Mbps

# ethernet TSN
*.*Switch.eth[*].macLayer.queue.typename = "InVehicleNetworkExampleQueue"
*.*Switch.eth[*].macLayer.queue.numQueues = 4
*.*Switch.eth[*].macLayer.queue.classifier.packetFilters = "wheel* or steering;lidar*;camera*;obu*"
*.*Switch.eth[*].macLayer.queue.classifier.packetDataFilters = "*;*;*;*"
*.*Switch.eth[*].macLayer.queue.queue[*].typename = "DropTailQueue"
*.*Switch.eth[*].macLayer.queue.gate[*].durations = []
